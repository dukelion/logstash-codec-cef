input  { 
	udp { 
		host => "0.0.0.0"
		port => 1535
		codec => netflow {
			definitions => "/opt/logstash/cisco-hsl.yaml"
		}
	} 
} 
filter { 
	mutate { 
		add_field => { 
			"netflowVersion" => "%{[netflow][version]}"
			"src" => "%{[netflow][ipv4_src_addr]}"
			"sourceTranslatedAddress" => "%{[netflow][ipv4_translated_src_addr]}"
			"spt" => "%{[netflow][l4_src_port]}"
			"sourceTranslatedPort" => "%{[netflow][l4_translated_src_port]}"
			"vrfId" => "%{[netflow][vrf_id]}"
			"protocolNum" => "%{[netflow][protocol]}"
			"netflowFlowSeqNum" => "%{[netflow][flow_seq_num]}"
			"netflowFlowsetId" => "%{[netflow][flowset_id]}"
			"deviceProduct" =>  'Logstash'
			"deviceVendor"  =>  'Elasticsearch'
			"deviceVersion" =>  '1.5'
			"deviceEventClassId" => 'HSL event'
			"agt"	=> "${[host]}"
			} 
		} 
	translate {
		field			=> "protocolNum"
		destination     => "proto"
		dictionary_path => "/opt/logstash/protocols.yaml"
	
	}
	translate {
		field => "[netflow][nat_event]"
		destination => "cat"
		dictionary => [
			"0", "Invalid",
			"1", "Add",
			"2", "Del"
		]	
	}
	date {
		target => "rt"
		match  => [ "[netflow][timestamp_millis]", "UNIX_MS" ]
	}
#	throttle {
#		period => 15
#		after_count => 1
#		add_tag => "throttled"	
#		key => host
#	}
} 
output { 
#	if "throttled" not in [tags] {
#		stdout { 
#			codec => rubydebug 
#			} 
#	}
	udp { 
		host => "127.0.0.1"
		port => 501
		codec => cef { 
			signature => ''
			name => message
			sev  => 0
		    fields => [
				"rt",
				"netflowVersion" ,
				"src" ,
				"sourceTranslatedAddress" ,
				"spt" ,
				"sourceTranslatedPort" ,
				"cat", 
				"vrfId" ,
				"protocolNum" ,
				"proto",
				"netflowFlowSeqNum" ,
				"netflowFlowsetId" ,
				"deviceProduct" ,
				"deviceVendor"  ,
				"deviceVersion" ,
				"deviceEventClassId" ,
				"agt"
			]	
			}
	} 
}
